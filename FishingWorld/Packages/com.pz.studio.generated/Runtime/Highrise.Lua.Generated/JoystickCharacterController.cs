/*

    Copyright (c) 2024 Pocketz World. All rights reserved.

    This is a generated file, do not edit!

    Generated by com.pz.studio
*/

#if UNITY_EDITOR

using System;
using System.Linq;
using UnityEngine;
using Highrise.Client;
using Highrise.Studio;
using Highrise.Lua;

namespace Highrise.Lua.Generated
{
    [AddComponentMenu("Lua/JoystickCharacterController")]
    [LuaRegisterType(0xf61593b84dbf87e6, typeof(LuaBehaviour))]
    public class JoystickCharacterController : LuaBehaviourThunk
    {
        private const string s_scriptGUID = "2db122c9a6a20418eab14ae681420f82";
        public override string ScriptGUID => s_scriptGUID;

        [SerializeField] public Highrise.AudioShader m_footstepWalkSound = default;
        [SerializeField] public Highrise.AudioShader m_footstepRunSound = default;
        [Tooltip("Keyboard and gamepad input used on Desktop clients")]
        [SerializeField] public UnityEngine.InputSystem.InputActionReference m_externalInputAction = default;
        [Tooltip("The running emote will be used beyond this speed")]
        [SerializeField] public System.Double m_runningSpeedThreshold = 5;
        [Tooltip("If checked the input to world space transform will not ignore the Y coordinate")]
        [SerializeField] public System.Boolean m_is2D = false;
        [Header("These properties determine if you should use an off-mesh link")]
        [Tooltip("You have to be within this distance of an off-mesh link endpoint to use it")]
        [SerializeField] public System.Double m_maxLinkDistance = 1;
        [Tooltip("The euler angle between your movement vector and the link vector has to be within this value to use it")]
        [SerializeField] public System.Double m_maxLinkAngle = 90;
        [SerializeField] public System.Double m_minLinkMoveStepChange = 0.5;

        protected override SerializedPropertyValue[] SerializeProperties()
        {
            if (_script == null)
                return Array.Empty<SerializedPropertyValue>();

            return new SerializedPropertyValue[]
            {
                CreateSerializedProperty(_script.GetPropertyAt(0), m_footstepWalkSound),
                CreateSerializedProperty(_script.GetPropertyAt(1), m_footstepRunSound),
                CreateSerializedProperty(_script.GetPropertyAt(2), m_externalInputAction),
                CreateSerializedProperty(_script.GetPropertyAt(3), m_runningSpeedThreshold),
                CreateSerializedProperty(_script.GetPropertyAt(4), m_is2D),
                CreateSerializedProperty(_script.GetPropertyAt(5), m_maxLinkDistance),
                CreateSerializedProperty(_script.GetPropertyAt(6), m_maxLinkAngle),
                CreateSerializedProperty(_script.GetPropertyAt(7), m_minLinkMoveStepChange),
            };
        }
    }
}

#endif
